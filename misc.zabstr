<FLAGS-AND-DEFAULTS (("IN-ZILCH" T)) ()>

<OBJECT CH-PLAYER (LOC RM-COMMAND-MODULE) (DESC "yourself") (MENU "me") (
SYNONYM ME MYSELF SELF BUD BRIGMAN) (ADJECTIVE BUD) (FLAGS FL-ALIVE FL-NO-DESC
FL-NO-ARTICLE FL-OPEN FL-PERSON FL-SEARCH FL-SEEN FL-TOUCHED)> 
<CONSTANT ME:OBJECT CH-PLAYER> 
<GLOBAL GL-LOC-TRAIL:TABLE <ITABLE 8 0>> 
<DEFINE-ROUTINE VISIBLE?> 
<DEFINE-ROUTINE CLOSED?> 
<DEFINE-ROUTINE ACCESSIBLE?> 
<CONSTANT K-ART-A 1> 
<CONSTANT K-ART-THE 2> 
<CONSTANT K-ART-ANY 3> 
<CONSTANT K-ART-HE 4> 
<CONSTANT K-ART-HIM 5> 
<CONSTANT K-ART-HIS 6> 
<DEFINE-ROUTINE RT-PRINT-DESC> 
<DEFINE-ROUTINE RT-PRINT-ARTICLE> 
<DEFINE-ROUTINE RT-PRINT-OBJ> 
<DEFINE-ROUTINE RT-PRINT-VERB> 
<GLOBAL QCONTEXT:OBJECT <>> 
<GLOBAL LIT:OBJECT <>> 
<GLOBAL P-IT-OBJECT:OBJECT <>> 
<GLOBAL P-THEM-OBJECT:OBJECT <>> 
<GLOBAL P-HER-OBJECT:OBJECT <>> 
<GLOBAL P-HIM-OBJECT:OBJECT <>> 
<GLOBAL P-ONE-NOUN <>> 
<CONSTANT K-DIROUT-TBL <ITABLE 255 (BYTE) 0>> 
<DEFINE-ROUTINE THIS-IS-IT> 
<DEFINE-ROUTINE RT-IN-ON-MSG> 
<DEFINE-ROUTINE RT-OUT-OFF-MSG> 
<DEFINE-ROUTINE RT-OPEN-MSG> 
<DEFINE-ROUTINE TOUCH-VERB?> 
<GLOBAL CLOCK-WAIT:FLAG <>> 
<GLOBAL GL-CLK-RUN:FLAG <>> 
<GLOBAL GL-Q-MAX 0 <> BYTE> 
<CONSTANT K-Q-NUM 20> 
<CONSTANT K-Q-SIZE <* ,K-Q-NUM 2>> 
<GLOBAL GL-Q-TBL <ITABLE ,K-Q-SIZE 0>> 
<GLOBAL GL-MOVES 360> 
<GLOBAL GL-NEW-TIME 0> 
<CONSTANT K-TIME-PASSES-MSG "Time passes...|"> 
<DEFINE-ROUTINE CLOCKER> 
<DEFINE-ROUTINE RT-QUEUE> 
<DEFINE-ROUTINE RT-DEQUEUE> 
<DEFINE-ROUTINE RT-IS-QUEUED?> 
<BIND () <ROUTINE C-PIXELS (X) <ADD #ZLOCAL!-IZILCH STACK 1>> <ROUTINE L-PIXELS
(Y) <ADD #ZLOCAL!-IZILCH STACK 1>> <ROUTINE PIXELS-C (X) <ADD #ZLOCAL!-IZILCH
STACK 1>> <ROUTINE PIXELS-L (Y) <ADD #ZLOCAL!-IZILCH STACK 1>> <ROUTINE CCURSET
(Y X "OPT" (W -3)) <CURSET #ZLOCAL!-IZILCH ?TMP1!-IZILCH #ZLOCAL!-IZILCH STACK
.W>> <ROUTINE CCURGET (TBL) <CURGET .TBL> <PUT .TBL 0 #ZLOCAL!-IZILCH STACK> <
PUT .TBL 1 #ZLOCAL!-IZILCH STACK> .TBL> <ROUTINE CSPLIT (Y) <SPLIT #
ZLOCAL!-IZILCH STACK>> <ROUTINE CWINPOS (W Y X) <WINPOS .W #ZLOCAL!-IZILCH
?TMP1!-IZILCH #ZLOCAL!-IZILCH STACK>> <ROUTINE CWINSIZE (W Y X) <WINSIZE .W #
ZLOCAL!-IZILCH ?TMP1!-IZILCH #ZLOCAL!-IZILCH STACK>> <ROUTINE CSCROLL (W "OPT"
(Y 1)) <SCROLL .W #ZLOCAL!-IZILCH STACK>> <ROUTINE RT-SCRIPT-INBUF ("OPT" (BUF
,P-INBUF) "AUX" (CNT 0) N CHR) <SET N <GETB .BUF 1>> <DIROUT ,D-SCREEN-OFF> <
SET BUF <ADD 1 .BUF>> <REPEAT () <COND (<GRTR? <SET CNT <ADD CNT 1>> .N> <
RETURN>) (ELSE <SET CHR <GETB .BUF .CNT>> <COND (<AND <NOT <LESS? .CHR !\a>> <
NOT <GRTR? .CHR !\z>>> <PRINTC #ZLOCAL!-IZILCH STACK>) (ELSE <PRINTC .CHR>)>)>>
<CRLF> <DIROUT ,D-SCREEN-ON>>> 
<DEFINE-ROUTINE C-PIXELS> 
<DEFINE-ROUTINE L-PIXELS> 
<DEFINE-ROUTINE PIXELS-C> 
<DEFINE-ROUTINE PIXELS-L> 
<DEFINE-ROUTINE CCURSET> 
<DEFINE-ROUTINE CCURGET> 
<DEFINE-ROUTINE CSPLIT> 
<DEFINE-ROUTINE CWINPOS> 
<DEFINE-ROUTINE CWINSIZE> 
<DEFINE-ROUTINE CSCROLL> 
<DEFINE-ROUTINE RT-SCRIPT-INBUF> 
<GLOBAL GL-SCR-WID:NUMBER 79> 
<CONSTANT K-WIN-TBL <TABLE 0 0 0>> 
<GLOBAL GL-FONT-X 7 <> BYTE> 
<GLOBAL GL-FONT-Y 10 <> BYTE> 
<GLOBAL GL-SPACE-WIDTH 0 <> BYTE> 
<DEFINE-ROUTINE GO> 